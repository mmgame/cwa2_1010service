// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: StateBean.proto

package com.cwa.component.bean;

public final class DataBean {
  private DataBean() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface UserInfoDataOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required uint64 userId = 1;
    /**
     * <code>required uint64 userId = 1;</code>
     *
     * <pre>
     *用户id
     * </pre>
     */
    boolean hasUserId();
    /**
     * <code>required uint64 userId = 1;</code>
     *
     * <pre>
     *用户id
     * </pre>
     */
    long getUserId();

    // required uint64 createTime = 2;
    /**
     * <code>required uint64 createTime = 2;</code>
     *
     * <pre>
     *创建时间
     * </pre>
     */
    boolean hasCreateTime();
    /**
     * <code>required uint64 createTime = 2;</code>
     *
     * <pre>
     *创建时间
     * </pre>
     */
    long getCreateTime();

    // required uint32 state = 3;
    /**
     * <code>required uint32 state = 3;</code>
     *
     * <pre>
     *状态
     * </pre>
     */
    boolean hasState();
    /**
     * <code>required uint32 state = 3;</code>
     *
     * <pre>
     *状态
     * </pre>
     */
    int getState();

    // required uint32 groupId = 4;
    /**
     * <code>required uint32 groupId = 4;</code>
     *
     * <pre>
     *组id
     * </pre>
     */
    boolean hasGroupId();
    /**
     * <code>required uint32 groupId = 4;</code>
     *
     * <pre>
     *组id
     * </pre>
     */
    int getGroupId();

    // required uint32 rid = 5;
    /**
     * <code>required uint32 rid = 5;</code>
     *
     * <pre>
     *区id
     * </pre>
     */
    boolean hasRid();
    /**
     * <code>required uint32 rid = 5;</code>
     *
     * <pre>
     *区id
     * </pre>
     */
    int getRid();

    // repeated uint32 serverIds = 6;
    /**
     * <code>repeated uint32 serverIds = 6;</code>
     *
     * <pre>
     *服务器id
     * </pre>
     */
    java.util.List<java.lang.Integer> getServerIdsList();
    /**
     * <code>repeated uint32 serverIds = 6;</code>
     *
     * <pre>
     *服务器id
     * </pre>
     */
    int getServerIdsCount();
    /**
     * <code>repeated uint32 serverIds = 6;</code>
     *
     * <pre>
     *服务器id
     * </pre>
     */
    int getServerIds(int index);
  }
  /**
   * Protobuf type {@code UserInfoData}
   *
   * <pre>
   *用户信息
   * </pre>
   */
  public static final class UserInfoData extends
      com.google.protobuf.GeneratedMessage
      implements UserInfoDataOrBuilder {
    // Use UserInfoData.newBuilder() to construct.
    private UserInfoData(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private UserInfoData(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final UserInfoData defaultInstance;
    public static UserInfoData getDefaultInstance() {
      return defaultInstance;
    }

    public UserInfoData getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private UserInfoData(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              userId_ = input.readUInt64();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              createTime_ = input.readUInt64();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              state_ = input.readUInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              groupId_ = input.readUInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              rid_ = input.readUInt32();
              break;
            }
            case 48: {
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
                serverIds_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000020;
              }
              serverIds_.add(input.readUInt32());
              break;
            }
            case 50: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020) && input.getBytesUntilLimit() > 0) {
                serverIds_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000020;
              }
              while (input.getBytesUntilLimit() > 0) {
                serverIds_.add(input.readUInt32());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
          serverIds_ = java.util.Collections.unmodifiableList(serverIds_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.cwa.component.bean.DataBean.internal_static_UserInfoData_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.cwa.component.bean.DataBean.internal_static_UserInfoData_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.cwa.component.bean.DataBean.UserInfoData.class, com.cwa.component.bean.DataBean.UserInfoData.Builder.class);
    }

    public static com.google.protobuf.Parser<UserInfoData> PARSER =
        new com.google.protobuf.AbstractParser<UserInfoData>() {
      public UserInfoData parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new UserInfoData(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<UserInfoData> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required uint64 userId = 1;
    public static final int USERID_FIELD_NUMBER = 1;
    private long userId_;
    /**
     * <code>required uint64 userId = 1;</code>
     *
     * <pre>
     *用户id
     * </pre>
     */
    public boolean hasUserId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required uint64 userId = 1;</code>
     *
     * <pre>
     *用户id
     * </pre>
     */
    public long getUserId() {
      return userId_;
    }

    // required uint64 createTime = 2;
    public static final int CREATETIME_FIELD_NUMBER = 2;
    private long createTime_;
    /**
     * <code>required uint64 createTime = 2;</code>
     *
     * <pre>
     *创建时间
     * </pre>
     */
    public boolean hasCreateTime() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required uint64 createTime = 2;</code>
     *
     * <pre>
     *创建时间
     * </pre>
     */
    public long getCreateTime() {
      return createTime_;
    }

    // required uint32 state = 3;
    public static final int STATE_FIELD_NUMBER = 3;
    private int state_;
    /**
     * <code>required uint32 state = 3;</code>
     *
     * <pre>
     *状态
     * </pre>
     */
    public boolean hasState() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required uint32 state = 3;</code>
     *
     * <pre>
     *状态
     * </pre>
     */
    public int getState() {
      return state_;
    }

    // required uint32 groupId = 4;
    public static final int GROUPID_FIELD_NUMBER = 4;
    private int groupId_;
    /**
     * <code>required uint32 groupId = 4;</code>
     *
     * <pre>
     *组id
     * </pre>
     */
    public boolean hasGroupId() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required uint32 groupId = 4;</code>
     *
     * <pre>
     *组id
     * </pre>
     */
    public int getGroupId() {
      return groupId_;
    }

    // required uint32 rid = 5;
    public static final int RID_FIELD_NUMBER = 5;
    private int rid_;
    /**
     * <code>required uint32 rid = 5;</code>
     *
     * <pre>
     *区id
     * </pre>
     */
    public boolean hasRid() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>required uint32 rid = 5;</code>
     *
     * <pre>
     *区id
     * </pre>
     */
    public int getRid() {
      return rid_;
    }

    // repeated uint32 serverIds = 6;
    public static final int SERVERIDS_FIELD_NUMBER = 6;
    private java.util.List<java.lang.Integer> serverIds_;
    /**
     * <code>repeated uint32 serverIds = 6;</code>
     *
     * <pre>
     *服务器id
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getServerIdsList() {
      return serverIds_;
    }
    /**
     * <code>repeated uint32 serverIds = 6;</code>
     *
     * <pre>
     *服务器id
     * </pre>
     */
    public int getServerIdsCount() {
      return serverIds_.size();
    }
    /**
     * <code>repeated uint32 serverIds = 6;</code>
     *
     * <pre>
     *服务器id
     * </pre>
     */
    public int getServerIds(int index) {
      return serverIds_.get(index);
    }

    private void initFields() {
      userId_ = 0L;
      createTime_ = 0L;
      state_ = 0;
      groupId_ = 0;
      rid_ = 0;
      serverIds_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasUserId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasCreateTime()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasState()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasGroupId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasRid()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt64(1, userId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt64(2, createTime_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(3, state_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeUInt32(4, groupId_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeUInt32(5, rid_);
      }
      for (int i = 0; i < serverIds_.size(); i++) {
        output.writeUInt32(6, serverIds_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(1, userId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(2, createTime_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, state_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, groupId_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(5, rid_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < serverIds_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(serverIds_.get(i));
        }
        size += dataSize;
        size += 1 * getServerIdsList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.cwa.component.bean.DataBean.UserInfoData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cwa.component.bean.DataBean.UserInfoData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cwa.component.bean.DataBean.UserInfoData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.cwa.component.bean.DataBean.UserInfoData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.cwa.component.bean.DataBean.UserInfoData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.cwa.component.bean.DataBean.UserInfoData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.cwa.component.bean.DataBean.UserInfoData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.cwa.component.bean.DataBean.UserInfoData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.cwa.component.bean.DataBean.UserInfoData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.cwa.component.bean.DataBean.UserInfoData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.cwa.component.bean.DataBean.UserInfoData prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code UserInfoData}
     *
     * <pre>
     *用户信息
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.cwa.component.bean.DataBean.UserInfoDataOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.cwa.component.bean.DataBean.internal_static_UserInfoData_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.cwa.component.bean.DataBean.internal_static_UserInfoData_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.cwa.component.bean.DataBean.UserInfoData.class, com.cwa.component.bean.DataBean.UserInfoData.Builder.class);
      }

      // Construct using com.cwa.component.bean.DataBean.UserInfoData.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        userId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        createTime_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        state_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        groupId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        rid_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        serverIds_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.cwa.component.bean.DataBean.internal_static_UserInfoData_descriptor;
      }

      public com.cwa.component.bean.DataBean.UserInfoData getDefaultInstanceForType() {
        return com.cwa.component.bean.DataBean.UserInfoData.getDefaultInstance();
      }

      public com.cwa.component.bean.DataBean.UserInfoData build() {
        com.cwa.component.bean.DataBean.UserInfoData result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.cwa.component.bean.DataBean.UserInfoData buildPartial() {
        com.cwa.component.bean.DataBean.UserInfoData result = new com.cwa.component.bean.DataBean.UserInfoData(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.userId_ = userId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.createTime_ = createTime_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.state_ = state_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.groupId_ = groupId_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.rid_ = rid_;
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          serverIds_ = java.util.Collections.unmodifiableList(serverIds_);
          bitField0_ = (bitField0_ & ~0x00000020);
        }
        result.serverIds_ = serverIds_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.cwa.component.bean.DataBean.UserInfoData) {
          return mergeFrom((com.cwa.component.bean.DataBean.UserInfoData)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.cwa.component.bean.DataBean.UserInfoData other) {
        if (other == com.cwa.component.bean.DataBean.UserInfoData.getDefaultInstance()) return this;
        if (other.hasUserId()) {
          setUserId(other.getUserId());
        }
        if (other.hasCreateTime()) {
          setCreateTime(other.getCreateTime());
        }
        if (other.hasState()) {
          setState(other.getState());
        }
        if (other.hasGroupId()) {
          setGroupId(other.getGroupId());
        }
        if (other.hasRid()) {
          setRid(other.getRid());
        }
        if (!other.serverIds_.isEmpty()) {
          if (serverIds_.isEmpty()) {
            serverIds_ = other.serverIds_;
            bitField0_ = (bitField0_ & ~0x00000020);
          } else {
            ensureServerIdsIsMutable();
            serverIds_.addAll(other.serverIds_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasUserId()) {
          
          return false;
        }
        if (!hasCreateTime()) {
          
          return false;
        }
        if (!hasState()) {
          
          return false;
        }
        if (!hasGroupId()) {
          
          return false;
        }
        if (!hasRid()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.cwa.component.bean.DataBean.UserInfoData parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.cwa.component.bean.DataBean.UserInfoData) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required uint64 userId = 1;
      private long userId_ ;
      /**
       * <code>required uint64 userId = 1;</code>
       *
       * <pre>
       *用户id
       * </pre>
       */
      public boolean hasUserId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required uint64 userId = 1;</code>
       *
       * <pre>
       *用户id
       * </pre>
       */
      public long getUserId() {
        return userId_;
      }
      /**
       * <code>required uint64 userId = 1;</code>
       *
       * <pre>
       *用户id
       * </pre>
       */
      public Builder setUserId(long value) {
        bitField0_ |= 0x00000001;
        userId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required uint64 userId = 1;</code>
       *
       * <pre>
       *用户id
       * </pre>
       */
      public Builder clearUserId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        userId_ = 0L;
        onChanged();
        return this;
      }

      // required uint64 createTime = 2;
      private long createTime_ ;
      /**
       * <code>required uint64 createTime = 2;</code>
       *
       * <pre>
       *创建时间
       * </pre>
       */
      public boolean hasCreateTime() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required uint64 createTime = 2;</code>
       *
       * <pre>
       *创建时间
       * </pre>
       */
      public long getCreateTime() {
        return createTime_;
      }
      /**
       * <code>required uint64 createTime = 2;</code>
       *
       * <pre>
       *创建时间
       * </pre>
       */
      public Builder setCreateTime(long value) {
        bitField0_ |= 0x00000002;
        createTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required uint64 createTime = 2;</code>
       *
       * <pre>
       *创建时间
       * </pre>
       */
      public Builder clearCreateTime() {
        bitField0_ = (bitField0_ & ~0x00000002);
        createTime_ = 0L;
        onChanged();
        return this;
      }

      // required uint32 state = 3;
      private int state_ ;
      /**
       * <code>required uint32 state = 3;</code>
       *
       * <pre>
       *状态
       * </pre>
       */
      public boolean hasState() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required uint32 state = 3;</code>
       *
       * <pre>
       *状态
       * </pre>
       */
      public int getState() {
        return state_;
      }
      /**
       * <code>required uint32 state = 3;</code>
       *
       * <pre>
       *状态
       * </pre>
       */
      public Builder setState(int value) {
        bitField0_ |= 0x00000004;
        state_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required uint32 state = 3;</code>
       *
       * <pre>
       *状态
       * </pre>
       */
      public Builder clearState() {
        bitField0_ = (bitField0_ & ~0x00000004);
        state_ = 0;
        onChanged();
        return this;
      }

      // required uint32 groupId = 4;
      private int groupId_ ;
      /**
       * <code>required uint32 groupId = 4;</code>
       *
       * <pre>
       *组id
       * </pre>
       */
      public boolean hasGroupId() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required uint32 groupId = 4;</code>
       *
       * <pre>
       *组id
       * </pre>
       */
      public int getGroupId() {
        return groupId_;
      }
      /**
       * <code>required uint32 groupId = 4;</code>
       *
       * <pre>
       *组id
       * </pre>
       */
      public Builder setGroupId(int value) {
        bitField0_ |= 0x00000008;
        groupId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required uint32 groupId = 4;</code>
       *
       * <pre>
       *组id
       * </pre>
       */
      public Builder clearGroupId() {
        bitField0_ = (bitField0_ & ~0x00000008);
        groupId_ = 0;
        onChanged();
        return this;
      }

      // required uint32 rid = 5;
      private int rid_ ;
      /**
       * <code>required uint32 rid = 5;</code>
       *
       * <pre>
       *区id
       * </pre>
       */
      public boolean hasRid() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>required uint32 rid = 5;</code>
       *
       * <pre>
       *区id
       * </pre>
       */
      public int getRid() {
        return rid_;
      }
      /**
       * <code>required uint32 rid = 5;</code>
       *
       * <pre>
       *区id
       * </pre>
       */
      public Builder setRid(int value) {
        bitField0_ |= 0x00000010;
        rid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required uint32 rid = 5;</code>
       *
       * <pre>
       *区id
       * </pre>
       */
      public Builder clearRid() {
        bitField0_ = (bitField0_ & ~0x00000010);
        rid_ = 0;
        onChanged();
        return this;
      }

      // repeated uint32 serverIds = 6;
      private java.util.List<java.lang.Integer> serverIds_ = java.util.Collections.emptyList();
      private void ensureServerIdsIsMutable() {
        if (!((bitField0_ & 0x00000020) == 0x00000020)) {
          serverIds_ = new java.util.ArrayList<java.lang.Integer>(serverIds_);
          bitField0_ |= 0x00000020;
         }
      }
      /**
       * <code>repeated uint32 serverIds = 6;</code>
       *
       * <pre>
       *服务器id
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getServerIdsList() {
        return java.util.Collections.unmodifiableList(serverIds_);
      }
      /**
       * <code>repeated uint32 serverIds = 6;</code>
       *
       * <pre>
       *服务器id
       * </pre>
       */
      public int getServerIdsCount() {
        return serverIds_.size();
      }
      /**
       * <code>repeated uint32 serverIds = 6;</code>
       *
       * <pre>
       *服务器id
       * </pre>
       */
      public int getServerIds(int index) {
        return serverIds_.get(index);
      }
      /**
       * <code>repeated uint32 serverIds = 6;</code>
       *
       * <pre>
       *服务器id
       * </pre>
       */
      public Builder setServerIds(
          int index, int value) {
        ensureServerIdsIsMutable();
        serverIds_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 serverIds = 6;</code>
       *
       * <pre>
       *服务器id
       * </pre>
       */
      public Builder addServerIds(int value) {
        ensureServerIdsIsMutable();
        serverIds_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 serverIds = 6;</code>
       *
       * <pre>
       *服务器id
       * </pre>
       */
      public Builder addAllServerIds(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureServerIdsIsMutable();
        super.addAll(values, serverIds_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 serverIds = 6;</code>
       *
       * <pre>
       *服务器id
       * </pre>
       */
      public Builder clearServerIds() {
        serverIds_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000020);
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:UserInfoData)
    }

    static {
      defaultInstance = new UserInfoData(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:UserInfoData)
  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_UserInfoData_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_UserInfoData_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\017StateBean.proto\"r\n\014UserInfoData\022\016\n\006use" +
      "rId\030\001 \002(\004\022\022\n\ncreateTime\030\002 \002(\004\022\r\n\005state\030\003" +
      " \002(\r\022\017\n\007groupId\030\004 \002(\r\022\013\n\003rid\030\005 \002(\r\022\021\n\tse" +
      "rverIds\030\006 \003(\rB\"\n\026com.cwa.component.beanB" +
      "\010DataBean"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_UserInfoData_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_UserInfoData_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_UserInfoData_descriptor,
              new java.lang.String[] { "UserId", "CreateTime", "State", "GroupId", "Rid", "ServerIds", });
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
